{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/tutorials\/shapewarp\/getting-started-with-shapewarp","title":"Getting Started with ShapeWarp in SwiftUI","type":"project"}],"path":"\/tutorials\/tutorial-table-of-contents","title":"Guides to using ShapeWarp with SwiftUI","type":"overview"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/tutorials\/shapewarp\/getting-started-with-shapewarp","title":"Getting Started with ShapeWarp in SwiftUI","type":"project"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/all","title":"static let all: PointType","type":"property"},{"path":"\/documentation\/shapewarp\/pointtype\/control","title":"static let control: PointType","type":"property"},{"path":"\/documentation\/shapewarp\/pointtype\/joint","title":"static let joint: PointType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shapewarp\/pointtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/shapewarp\/pointtype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shapewarp\/pointtype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/pointtype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/shapewarp\/pointtype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/shapewarp\/pointtype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/shapewarp\/pointtype","title":"PointType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/shapewarper\/init(shape:amount:seed:include:)","title":"init(shape: S, amount: CGFloat, seed: UInt64, include: PointType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/shapewarper\/warp()","title":"func warp() -> some Shape","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shapewarp\/shapewarper\/animatabledata","title":"var animatableData: EmptyAnimatableData","type":"property"}],"path":"\/documentation\/shapewarp\/shapewarper\/animatable-implementations","title":"Animatable Implementations","type":"symbol"}],"path":"\/documentation\/shapewarp\/shapewarper","title":"ShapeWarper","type":"struct"}],"path":"\/documentation\/shapewarp","title":"ShapeWarp","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}